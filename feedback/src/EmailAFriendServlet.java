/* Generated by Together */
import gov.firstgov.emailafriend.SendEmailAFriendEnglish;
import gov.firstgov.emailafriend.SendEmailAFriendSpanish;
import gov.firstgov.util.*;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 * This servlet will take the data sent from EmailFriendForm.jsp and validate the email addresses.
 * If the addresses are wrong, it will return the user to EmailFriendForm.jsp so they may enter corrections.
 * If the addresses are correct, it will send the link to the address listed in the "to" field of the form
 * and redirect the user to EmailFriendThankYou.jsp for a thank you message.
 * If a problem occurs during transmission of the message, the user will be redirected to EmailFriendError.jsp
 * @author Russell O'Neill
 * @version 1.0
 * @since 8/1/2003
 */
public class EmailAFriendServlet extends HttpServlet  {
	/*
		* Gets new Log instance for this class
	*/
    private static Log log = LogFactory.getLog(EmailAFriendServlet.class);
	
	private static final String HTTP_WWW_FIRSTGOV_GOV = "http://www.firstgov.gov/";
	private static final String HTTP_WWW_USA_GOV = "http://www.usa.gov/";
	
	/**
     * if user trys to access Servlet explicitly, redirect to the USA.gov homepage.
     */
    public void doGet(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException{
		response.sendRedirect(response.encodeRedirectURL(HTTP_WWW_USA_GOV));
    } 

	/**
     * When E-mail a Friend form sends data, verify the days and send the e-mail
     */
    public void doPost(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException{
    	if ((request.getParameter("lang") != null) && (request.getParameter("lang").equals("es"))) {
    		doSpanishEAF(request,response);
    	}
    	else doEnglishEAF(request, response);
    }

    public String getServletInfo(){ //Gets servelt information
        return "Servlet that performs business logic for Email a Friend on USA.gov";
    }

    /*# EmailAFriendImpl lnkEmailAFriendImpl; */
	private void doSpanishEAF(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		SendEmailAFriendSpanish lnkEmailAFriendImpl = new SendEmailAFriendSpanish(); //logic implementation class
        response.setContentType("text/html");
        
		String linkToSend = StringUtils.truncate(request.getParameter("lts"), Constants.LTS_MAXLENGTH); //the link to send, allowed MAXIMUM length = 1024
        String toAddress = StringUtils.trim(request.getParameter("toad")); //the to address(es) in the meessage, allowed MAXIMUM email addresses = 100 emails
        String fromAddress = StringUtils.trim(request.getParameter("frad")); //the from address in the message, allowed MAXIMUM email addresses = 100 emails
        String fromName = StringUtils.EMPTY;
        String titleInURL = StringUtils.truncate(request.getParameter("title"), Constants.TITLE_MAXLENGTH); //title from query string, allowed MAXIMUM length = 1024
		
		//log.debug("doSpanishEAF(), linkToSend: " + linkToSend + ", toAddress: " + toAddress +", fromAddress: "+ fromAddress + ", fromName: " + fromName + ", titleInURL: "+ titleInURL);
        
        String title = StringUtils.EMPTY; //title from query string with '.' replaced with '&'
        boolean copy = false;
        //if ((request.getParameter("cc")!= null) && (! request.getParameter("cc").trim().equals(""))) copy = true;
        if (!StringUtils.isEmptyOrNull(request.getParameter("cc"))) copy = true;
        String redirectURL = StringUtils.EMPTY; //The url that the servelet will redirect the user too.
        int error = 0; //error code
        boolean badlink = false; //true if linkToSend is an invalid link
		//validate link to send
        //if ((linkToSend == null) || (linkToSend.equals("")) || (linkToSend.indexOf("http://www.firstgov.gov") != 0) || (linkToSend.indexOf("http://www.usa.gov") != 0))
        if ( StringUtils.isEmptyOrNull(linkToSend) 
			|| (!linkToSend.startsWith(HTTP_WWW_FIRSTGOV_GOV) && !linkToSend.startsWith(HTTP_WWW_USA_GOV) ) )
        {
			//log.debug("*****doSpanishEAF() BAD LINK******, Set linkToSend to empty string!");
            badlink = true;
            //if (linkToSend == null) linkToSend = "";
            linkToSend = StringUtils.nonNull(linkToSend);
        }
        else {
			//log.debug("*****doSpanishEAF() GOOD LINK******, linkToSend: " + linkToSend + ", toAddress: " + toAddress + ", fromAddress: " + fromAddress + ", fromName: " + fromName + ", titleInURL: " + titleInURL);
	        //validate "to" e-mail address
	        //if ((toAddress == null) || (toAddress.equals("")) || (!lnkEmailAFriendImpl.validateToEmail(toAddress)) )
	        if (StringUtils.isEmptyOrNull(toAddress) || (!lnkEmailAFriendImpl.validateToEmail(toAddress)) )
	        {
	            error += 1;
	            //if (toAddress == null) toAddress="";
	            toAddress = StringUtils.nonNull(toAddress);
	        }
	        //validate "from" e-mail address
			//if ((fromAddress == null) || (fromAddress.equals("")) || (!lnkEmailAFriendImpl.validateFromEmail(fromAddress)) )
		    if (StringUtils.isEmptyOrNull(fromAddress)|| (!lnkEmailAFriendImpl.validateFromEmail(fromAddress)) )
	        {
	            error += 2;
	            //if (fromAddress == null) fromAddress="";
	            fromAddress = StringUtils.nonNull(fromAddress);
	        }
		    /*
	        if (fromName == null)
	        {
	            fromName = "";
	        }
	        */
		    
	        //ensure title is a valid Java String
		    titleInURL = StringUtils.nonNull(titleInURL);
		    /*
	        if (titleInURL == null) {
	        	titleInURL = "";
	        }
	        */
	        title = StringUtils.HtmlEncodeAcute(titleInURL);
        }
        StringBuffer sb = new StringBuffer();
        if (error != 0) //if address validation error occured, send user back to form
        {
        	/*
			redirectURL = "/feedback/EmailFriendForm-es.jsp?";
            redirectURL += "error=" + error;
            redirectURL += "&toad=" + toAddress;
            redirectURL += "&frad=" + fromAddress;
            redirectURL += "&frnm=" + fromName;
            redirectURL += "&title=" + titleInURL;
            if (copy) redirectURL += "&cc=true";
            redirectURL += "&lts=" + linkToSend;
            */
        	
        	sb.append("/feedback/EmailFriendForm-es.jsp?")
				.append("error=").append(error)
				.append("&toad=").append(toAddress)
				.append("&frad=").append(fromAddress)
				.append("&title=").append(titleInURL);
        	if (copy) sb.append("&cc=true");
	        sb.append("&lts=").append(linkToSend);
        }
        else if (badlink) //if link to send is invalid, send user to error page
        {
        	/*
            redirectURL = "/feedback/EmailFriendError-es.jsp?linkerror=true";
            redirectURL += "&toad="+toAddress;
            */
        	sb.append("/feedback/EmailFriendError-es.jsp?linkerror=true").append("&toad=").append(toAddress);
        }
        else //if all validation ok, send messsage
        {
            lnkEmailAFriendImpl.setLinkToSend(linkToSend);
   	     	lnkEmailAFriendImpl.setFromName(fromName);
   	     	lnkEmailAFriendImpl.setTitle(title);
   	     	lnkEmailAFriendImpl.setSendCopy(copy);
        	if (lnkEmailAFriendImpl.sendMessage()) //if message sent ok, send user to thank you page
        	{
        			/*
                    redirectURL = "/feedback/EmailFriendThankYou-es.jsp?";
                    redirectURL += "toad=" + toAddress;
                    redirectURL += "&title=" + titleInURL;
                    if (copy) redirectURL += "&cc=true";
                    redirectURL += "&lts=" + linkToSend;
                    */
                	sb.append("/feedback/EmailFriendThankYou-es.jsp?")
						.append("toad=").append(toAddress)
						.append("&title=").append(titleInURL);
                	if (copy) sb.append("&cc=true");
		        	sb.append("&lts=").append(linkToSend);                 
                    
        	}
        	else //if error during message transmission, send user to the Error page
        	{
        			/*
                    redirectURL = "/feedback/EmailFriendError-es.jsp?";
                    redirectURL += "toad=" + toAddress;
                    redirectURL += "&title=" + titleInURL;
                    if (copy) redirectURL += "&cc=true";
                    redirectURL += "&lts=" + linkToSend;
                    */
                	sb.append("/feedback/EmailFriendError-es.jsp?")
						.append("toad=").append(toAddress)
						.append("&title=").append(titleInURL);
	            	if (copy) sb.append("&cc=true");
		        	sb.append("&lts=").append(linkToSend);                     
        	}
        }
        
        redirectURL = sb.toString();
        response.sendRedirect(response.encodeRedirectURL(redirectURL));
	}
	
	private void doEnglishEAF(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		SendEmailAFriendEnglish lnkEmailAFriendImpl = new SendEmailAFriendEnglish(); //logic implementation class
        response.setContentType("text/html");
        
		String linkToSend = StringUtils.truncate(request.getParameter("lts"), Constants.LTS_MAXLENGTH); //the link to send, allowed MAXIMUM length = 1024
        String toAddress = StringUtils.trim(request.getParameter("toad")); //the to address(es) in the meessage, allowed MAXIMUM email addresses = 100 emails
        String fromAddress = StringUtils.trim(request.getParameter("frad")); //the from address in the message, allowed MAXIMUM email addresses = 100 emails
        String fromName = StringUtils.EMPTY;
        String redirectURL = StringUtils.EMPTY; //The url that the servelet will redirect the user too.
        
		//log.debug("doEnglishEAF(), linkToSend: " + linkToSend + ", toAddress: " + toAddress +", fromAddress: "+ fromAddress + ", fromName: " + fromName + ", redirectURL: "+ redirectURL);
				
        int error = 0; //error code
        boolean badlink = false; //true if linkToSend is an invalid link
        
		//validate link to send
        //if ((linkToSend.equals("")) || (linkToSend.indexOf("http://www.firstgov.gov") != 0) || (linkToSend.indexOf("http://www.usa.gov") != 0))
        if ( StringUtils.isEmptyOrNull(linkToSend) 
			|| (!linkToSend.startsWith(HTTP_WWW_FIRSTGOV_GOV) && !linkToSend.startsWith(HTTP_WWW_USA_GOV) ) )
        {
			log.debug("*****doEnglishEAF() BAD LINK******");
			log.debug("starts with firstgov: "+linkToSend.startsWith(HTTP_WWW_FIRSTGOV_GOV));
			log.debug("starts with usa.gov: "+linkToSend.startsWith(HTTP_WWW_USA_GOV));
			log.debug("is empty or null: "+ StringUtils.isEmptyOrNull(linkToSend));
            badlink = true;
        }
        else {
			log.debug("*****doEnglishEAF() GOOD LINK******, linkToSend: " + linkToSend + ", toAddress: " + toAddress +", fromAddress: "+ fromAddress + ", fromName: "+ fromName +", redirectURL: "+ redirectURL);
	        //validate "to" e-mail address
	        //if ((toAddress.equals("")) || (!lnkEmailAFriendImpl.validateToEmail(toAddress)) )
        	if ( StringUtils.isEmptyOrNull(toAddress) || (!lnkEmailAFriendImpl.validateToEmail(toAddress)) )
	        {
	            error += 1;
	        }
	        //validate "from" e-mail address
			//if ((fromAddress.equals("")) || (!lnkEmailAFriendImpl.validateFromEmail(fromAddress)) )
			if (StringUtils.isEmptyOrNull(fromAddress) || (!lnkEmailAFriendImpl.validateFromEmail(fromAddress)) )
	        {
	            error += 2;
	        }
			/*
	        if (fromName == null)
	        {
	            fromName = "";
	        }
	        */
        }
        StringBuffer sb = new StringBuffer();
        if (error != 0) //if address validation error occured, send user back to form
        {
        	/*
			redirectURL = "/feedback/EmailFriendForm.jsp?";
            redirectURL += "error=" + error;
            redirectURL += "&toad=" + toAddress;
            redirectURL += "&frad=" + fromAddress;
            redirectURL += "&frnm=" + fromName;
            redirectURL += "&lts=" + linkToSend;
            */
        	
        	sb.append("/feedback/EmailFriendForm.jsp?")
				.append("error=").append(error)
				.append("&toad=").append(toAddress)
				.append("&frad=").append(fromAddress)
		        .append("&lts=").append(linkToSend);
        
        }
        else if (badlink) //if link to send is invalid, send user to error page
        {
        	/*
            redirectURL = "/feedback/EmailFriendError.jsp?linkerror=true";
            redirectURL += "&toad="+toAddress;
            */
        	
            sb.append("/feedback/EmailFriendError.jsp?linkerror=true").append("&toad=").append(toAddress);
        }
        else //if all validation ok, send messsage
        {
            lnkEmailAFriendImpl.setLinkToSend(linkToSend);
   	     	lnkEmailAFriendImpl.setFromName(fromName);
        	if (lnkEmailAFriendImpl.sendMessage()) //if message sent ok, send user to thank you page
        	{
        			/*
                    redirectURL = "/feedback/EmailFriendThankYou.jsp?";
                    redirectURL += "toad=" + toAddress;
                    redirectURL += "&lts=" + linkToSend;
                    */
                	sb.append("/feedback/EmailFriendThankYou.jsp?")
					.append("toad=").append(toAddress)
			        .append("&lts=").append(linkToSend);
        	}
        	else //if error during message transmission, send user to the Error page
        	{
        			/*
                    redirectURL = "/feedback/EmailFriendError.jsp?";
                    redirectURL += "toad=" + toAddress;
                    redirectURL += "&lts=" + linkToSend;
                    */
        		
                	sb.append("/feedback/EmailFriendError.jsp?")
					.append("toad=").append(toAddress)
			        .append("&lts=").append(linkToSend);
                	
        	}
        }
        
        redirectURL = sb.toString();
        response.sendRedirect(response.encodeRedirectURL(redirectURL));
	}
}
